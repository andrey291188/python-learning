# Словарь він же об'єкт
phonebook = {
    "Ivan": 123123123,
    "Vasya": 234234234,
    "Mykola": 345345345
}

name = input("Enter name: ")

if name in phonebook:
    print(phonebook[name])
else:
    print("This name {0} not found!".format(name))

# Створення та робота з словарем (об'єктом)
new_obj = dict() # Створення об'єкта
new_obj["Vasya"] = 10000 # Запис нового ключа зі значенням

# Методи словарей (об'єктів)
obj = {"c": 3, "d":4, "a": 1, "b": 2}
keys_obj = obj.keys() # Виведе список ключів ["c", "d", "a", "b"]

sorted(keys_obj) # Відсортує від А до Я

numbers = obj.values() # Виведе список всіх значень

print(max(numbers)) # max виведе максимальне значення

# Об'єднання двох об'єктів
first_obj = {"c": 3, "d":4, "a": 1, "b": 2}
second_obj = {"c": 4, "g": 5, "f": 7}

first_obj.update(second_obj) # "с" зі наченням "4" перепише "с" зі значенням "3"

value = first_obj.pop("f") # Видаляє ключ а значення може повернути в нову константу 

first_obj["l"] = value # Можемо записати в новий ключ

first_obj.get("m") # Безпечне отримання значення по ключу, якщо ключа немає то виведе None замість помилки

first_obj.get("m", {}).get("g", {}).get("m", {}) # В get вторим параметром вказуємо {} що цепочка не ламалачь через отриманий None якщо такого ключа немає

# Метод set який зробить словарь з унікальними значеннями
numbers_list = [1, 1, 2, 3, 4, 5, 5]

unique = set(numbers_list) # Виведе {1, 2, 3, 4, 5} це інша структура даних "множина"

# Множини та їх методи
nums_1 = {1, 2, 3, 4, 5}
nums_2 = {4, 5, 6, 7, 8}

nums_1.intersection(nums_2) # Виведе тільки ті значення які повторюються в обох множинах
nums_1 & nums_2 # те саме що і на строку вище

nums_1.union(nums_2) # Обєтнати дві множини, не унікальних дані не будуть повторюватись
nums_1 | nums_2 # Те саме що і на строку вище

nums_1.difference(nums_2) # Виведе з першої множини тільки ті елементи яких немає в другому списку
nums_1 - nums_2 # Те саме що і на строку вище

nums_1.add(10) # Додати елемент до множини
nums_2.discard(1) # Видалити елемент з множини